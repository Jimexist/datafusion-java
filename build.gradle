/*
 * This file was generated by the Gradle 'init' task.
 *
 * This is a general purpose Gradle build.
 * Learn more about Gradle by exploring our samples at https://docs.gradle.org/7.2/samples
 */
plugins {
    id 'java-library'
    id 'idea'
    id "com.diffplug.spotless" version "5.16.0"
    id "com.github.johnrengelman.shadow" version "7.1.0"
}

java {
    sourceCompatibility = JavaVersion.VERSION_11
    targetCompatibility = JavaVersion.VERSION_11
}

spotless {
    java {
        googleJavaFormat()
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation group: 'org.apache.logging.log4j', name: 'log4j-api', version: '2.14.1'
    implementation group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.14.1'
    // https://mvnrepository.com/artifact/org.apache.arrow/arrow-format
    implementation 'org.apache.arrow:arrow-format:5.0.0'
    // https://mvnrepository.com/artifact/org.apache.arrow/arrow-vector
    implementation 'org.apache.arrow:arrow-vector:5.0.0'
}

task generateJniHeaders(type: JavaCompile) {
    classpath = sourceSets.main.compileClasspath
    destinationDir file("${buildDir}/generated/jni")
    source = sourceSets.main.java
    options.compilerArgs += [
            '-h', file("${buildDir}/generated/jni"),
            '-d', file("${buildDir}/generated/jni-tmp")
    ]
    // options.verbose = true
    doLast {
        delete file("${buildDir}/generated/jni-tmp")
    }
}

tasks.register('cargoBuild') {
    dependsOn('generateJniHeaders')

    doLast {
        exec {
            workingDir "${workingDir}/datafusion_jni"
            executable 'cargo'
            args 'build'
        }
    }
}
